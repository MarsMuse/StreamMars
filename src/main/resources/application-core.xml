<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:jaxws="http://cxf.apache.org/jaxws" 
xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx.xsd 
http://cxf.apache.org/jaxrs 
http://cxf.apache.org/schemas/jaxrs.xsd 
http://cxf.apache.org/jaxws 
http://cxf.apache.org/schemas/jaxws.xsd">

    <description>框架核心配置</description>
    
    <context:component-scan base-package="com.beta.**.service" />
    
    <jaxrs:server id="workPlatformService" address="/api" >
        <jaxrs:serviceBeans>
            <ref bean="workPlatformServiceImp"></ref>
        </jaxrs:serviceBeans>
       <jaxrs:outInterceptors>
       </jaxrs:outInterceptors>
       <jaxrs:inInterceptors>
       </jaxrs:inInterceptors> 
    
    <!-- 配置cxf 请求日志输出 -->
       <jaxrs:features>
           [b]<bean class="org.apache.cxf.feature.LoggingFeature"></bean>[/b]
       </jaxrs:features>

    </jaxrs:server>
    
    
<!--     <bean id="batchPushTask" class="com.beta.api.task.BatchPushTask"></bean>
    
    <bean id="myJobDetailA"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="batchPushTask"> </property>
        <property name="targetMethod" value="pushBatch"></property>
        <property name="concurrent" value="false" />
        是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程
    </bean> -->

    <!-- <bean id="myTriggersA"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="myJobDetailA">
        </property>
        <property name="cronExpression">
            <value>0 */2 * * * ?</value>
        </property>
    </bean> -->
    
<!--     <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">  
        <property name="jobDetail" ref="myJobDetailA" />  
        <property name="startDelay" value="0" />调度工厂实例化后，经过0秒开始执行调度  
        <property name="repeatInterval" value="2000" />每2秒调度一次  
    </bean>  

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="simpleTrigger"/>
            </list>
        </property>
    </bean> -->
</beans>